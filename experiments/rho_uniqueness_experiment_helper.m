function [ax] = rho_uniqueness_experiment_helper(out_struct_max, title_str)
rho = out_struct_max.rhos{end};

% first, let's find the value of lambda^* we used
x = floor(out_struct_max.xmin_unscaled);
ind = find(x > 0);
thresholds = arrayfun(@(ii) rho{ii}(x(ii)), ind);
lambda = min(thresholds);

% now we can slice and dice the rho vector itself
all_sorted_rhos = sort(vertcat(rho{:}));
rho_len = length(all_sorted_rhos);

% figure('Units','inches', ...
%     'Position',[0 0 1.5 1.7], ...
%     'PaperPositionMode', 'auto');

index_percentiles = (1:rho_len) / rho_len;

ax = axes;
plot(ax, index_percentiles, all_sorted_rhos, 'o', 'MarkerSize', 2); hold on;
plot(ax, index_percentiles, repmat(lambda, 1, rho_len), '-', 'LineWidth', 1.5);
fprintf('Max val of all sorted rhos: %.5f\n', max(all_sorted_rhos));

axis(ax, [0 1 0 all_sorted_rhos(end)]);
set(ax,...
    'Units','normalized',...
    'YTick',0:0.05:all_sorted_rhos(end),...
    'XTick',0:0.5:1,...
    'XTickLabel',{'0','50','100'},...
    'Position',[.15 .2 .75 .7],...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',6,...
    'FontName','Times');

% xlabel(ax, 'Sorted order index percentile',...
%     'FontUnits','points',...
%     'interpreter','latex',...
%     'FontSize',10,...
%     'FontName','Times');
% ylabel(ax, 'Value',...
%     'FontUnits','points',...
%     'interpreter','latex',...
%     'FontSize',10,...
%     'FontName','Times');
% legend({'Sorted $\rho$ values', 'Threshold $\lambda^*$'},...
%     'location','northwest',...
%     'FontUnits','points',...
%     'interpreter','latex',...
%     'FontSize',10,...
%     'FontName','Times');


title(ax, title_str,...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',6,...
    'FontName','Times');


end